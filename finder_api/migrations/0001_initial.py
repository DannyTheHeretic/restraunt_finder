# Generated by Django 5.1.4 on 2024-12-24 17:45

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name of the Restaurant')),
                ('lat', models.DecimalField(decimal_places=6, default=0, max_digits=9)),
                ('long', models.DecimalField(decimal_places=6, default=0, max_digits=9)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=63)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('website', models.URLField(blank=True)),
                ('average_rating', models.IntegerField(choices=[(0, 0.0), (1, 0.1), (2, 0.2), (3, 0.3), (4, 0.4), (5, 0.5), (6, 0.6), (7, 0.7), (8, 0.8), (9, 0.9), (10, 1.0), (11, 1.1), (12, 1.2), (13, 1.3), (14, 1.4), (15, 1.5), (16, 1.6), (17, 1.7), (18, 1.8), (19, 1.9), (20, 2.0), (21, 2.1), (22, 2.2), (23, 2.3), (24, 2.4), (25, 2.5), (26, 2.6), (27, 2.7), (28, 2.8), (29, 2.9), (30, 3.0), (31, 3.1), (32, 3.2), (33, 3.3), (34, 3.4), (35, 3.5), (36, 3.6), (37, 3.7), (38, 3.8), (39, 3.9), (40, 4.0), (41, 4.1), (42, 4.2), (43, 4.3), (44, 4.4), (45, 4.5), (46, 4.6), (47, 4.7), (48, 4.8), (49, 4.9), (50, 5.0), (51, 5.1), (52, 5.2), (53, 5.3), (54, 5.4), (55, 5.5), (56, 5.6), (57, 5.7), (58, 5.8), (59, 5.9), (60, 6.0), (61, 6.1), (62, 6.2), (63, 6.3), (64, 6.4), (65, 6.5), (66, 6.6), (67, 6.7), (68, 6.8), (69, 6.9), (70, 7.0), (71, 7.1), (72, 7.2), (73, 7.3), (74, 7.4), (75, 7.5), (76, 7.6), (77, 7.7), (78, 7.8), (79, 7.9), (80, 8.0), (81, 8.1), (82, 8.2), (83, 8.3), (84, 8.4), (85, 8.5), (86, 8.6), (87, 8.7), (88, 8.8), (89, 8.9), (90, 9.0), (91, 9.1), (92, 9.2), (93, 9.3), (94, 9.4), (95, 9.5), (96, 9.6), (97, 9.7), (98, 9.8), (99, 9.9)], default=0)),
                ('price_level', models.IntegerField(blank=True, choices=[(1, 'Cheap (>5)'), (2, 'Cheapish (5~10)'), (3, 'Mid (10~15)'), (4, 'Midish (15~30)'), (5, 'Expensive (30~50)'), (6, 'DAYUMM (50~100)'), (7, 'Alright Then (100+)')])),
                ('logo', models.ImageField(upload_to='./finder_api/static/images/logos')),
                ('catagory', models.ManyToManyField(blank=True, to='finder_api.cuisine')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('favorites', models.ManyToManyField(related_name='restaurants', to='finder_api.restaurant')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('rating', models.IntegerField(choices=[(0, 0.0), (1, 0.1), (2, 0.2), (3, 0.3), (4, 0.4), (5, 0.5), (6, 0.6), (7, 0.7), (8, 0.8), (9, 0.9), (10, 1.0), (11, 1.1), (12, 1.2), (13, 1.3), (14, 1.4), (15, 1.5), (16, 1.6), (17, 1.7), (18, 1.8), (19, 1.9), (20, 2.0), (21, 2.1), (22, 2.2), (23, 2.3), (24, 2.4), (25, 2.5), (26, 2.6), (27, 2.7), (28, 2.8), (29, 2.9), (30, 3.0), (31, 3.1), (32, 3.2), (33, 3.3), (34, 3.4), (35, 3.5), (36, 3.6), (37, 3.7), (38, 3.8), (39, 3.9), (40, 4.0), (41, 4.1), (42, 4.2), (43, 4.3), (44, 4.4), (45, 4.5), (46, 4.6), (47, 4.7), (48, 4.8), (49, 4.9), (50, 5.0), (51, 5.1), (52, 5.2), (53, 5.3), (54, 5.4), (55, 5.5), (56, 5.6), (57, 5.7), (58, 5.8), (59, 5.9), (60, 6.0), (61, 6.1), (62, 6.2), (63, 6.3), (64, 6.4), (65, 6.5), (66, 6.6), (67, 6.7), (68, 6.8), (69, 6.9), (70, 7.0), (71, 7.1), (72, 7.2), (73, 7.3), (74, 7.4), (75, 7.5), (76, 7.6), (77, 7.7), (78, 7.8), (79, 7.9), (80, 8.0), (81, 8.1), (82, 8.2), (83, 8.3), (84, 8.4), (85, 8.5), (86, 8.6), (87, 8.7), (88, 8.8), (89, 8.9), (90, 9.0), (91, 9.1), (92, 9.2), (93, 9.3), (94, 9.4), (95, 9.5), (96, 9.6), (97, 9.7), (98, 9.8), (99, 9.9)])),
                ('review_text', models.TextField(default='')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Date Created')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='finder_api.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
